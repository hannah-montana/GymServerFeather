/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.13).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Session;
import io.swagger.annotations.*;
import io.swagger.model.SessionProgram;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2019-10-19T11:02:13.245Z[GMT]")
@Api(value = "sessionsPrograms", description = "the sessionsPrograms API")
public interface SessionsProgramsApi {
                                                                                                    // reponse = Session.class
    @ApiOperation(value = "get sessions in a Program", nickname = "getSessionsOfProgram", notes = "", response = SessionProgram.class, tags={ "SessionsPrograms", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = SessionProgram.class), // reponse = Session.class
        @ApiResponse(code = 400, message = "Bad request"),
        @ApiResponse(code = 404, message = "Program  was not found"),
        @ApiResponse(code = 200, message = "Unexpected error") })
    @RequestMapping(value = "/sessionsPrograms/{progId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Session>> getSessionsOfProgram(@ApiParam(value = "Parameter description in CommonMark or HTML.", required = true) @PathVariable("progId") String progId);

}
